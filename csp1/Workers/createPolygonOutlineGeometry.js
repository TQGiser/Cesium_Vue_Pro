define(["./defaultValue-94c3e563","./Matrix2-fc7e9822","./ArcType-0cf52f8c","./GeometryOffsetAttribute-3e8c299c","./Transforms-a076dbe6","./RuntimeError-c581ca93","./ComponentDatatype-4a60b8d6","./EllipsoidTangentPlane-d2c0c530","./GeometryAttribute-2ecf73f6","./GeometryAttributes-7df9bef6","./GeometryInstance-97bd792f","./GeometryPipeline-b4816e69","./IndexDatatype-db156785","./PolygonGeometryLibrary-6d3a5ed4","./PolygonPipeline-cc031b9f","./_commonjsHelpers-3aae1032-f55dc0c4","./combine-761d9c3f","./WebGLConstants-7dccdc96","./AxisAlignedBoundingBox-8103739f","./IntersectionTests-5deed78b","./Plane-e20fba8c","./AttributeCompression-4d18cc04","./EncodedCartesian3-d3e254ea","./arrayRemoveDuplicates-06991c15","./EllipsoidRhumbLine-daebc75b"],(function(e,t,i,o,r,n,a,s,l,y,p,c,d,u,f,g,h,m,b,P,E,A,_,G,T){"use strict";const H=[],L=[];function C(e,t,o,r,n){const c=s.EllipsoidTangentPlane.fromPoints(t,e),g=c.projectPointsOntoPlane(t,H),h=f.PolygonPipeline.computeWindingOrder2D(g);let m,b;h===f.WindingOrder.CLOCKWISE&&(g.reverse(),t=t.slice().reverse());let P=t.length,E=0;if(r)for(m=new Float64Array(2*P*3),b=0;b<P;b++){const e=t[b],i=t[(b+1)%P];m[E++]=e.x,m[E++]=e.y,m[E++]=e.z,m[E++]=i.x,m[E++]=i.y,m[E++]=i.z}else{let r=0;if(n===i.ArcType.GEODESIC)for(b=0;b<P;b++)r+=u.PolygonGeometryLibrary.subdivideLineCount(t[b],t[(b+1)%P],o);else if(n===i.ArcType.RHUMB)for(b=0;b<P;b++)r+=u.PolygonGeometryLibrary.subdivideRhumbLineCount(e,t[b],t[(b+1)%P],o);for(m=new Float64Array(3*r),b=0;b<P;b++){let r;n===i.ArcType.GEODESIC?r=u.PolygonGeometryLibrary.subdivideLine(t[b],t[(b+1)%P],o,L):n===i.ArcType.RHUMB&&(r=u.PolygonGeometryLibrary.subdivideRhumbLine(e,t[b],t[(b+1)%P],o,L));const a=r.length;for(let e=0;e<a;++e)m[E++]=r[e]}}P=m.length/3;const A=2*P,_=d.IndexDatatype.createTypedArray(P,A);for(E=0,b=0;b<P-1;b++)_[E++]=b,_[E++]=b+1;return _[E++]=P-1,_[E++]=0,new p.GeometryInstance({geometry:new l.Geometry({attributes:new y.GeometryAttributes({position:new l.GeometryAttribute({componentDatatype:a.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:m})}),indices:_,primitiveType:l.PrimitiveType.LINES})})}function v(e,t,o,r,n){const c=s.EllipsoidTangentPlane.fromPoints(t,e),g=c.projectPointsOntoPlane(t,H),h=f.PolygonPipeline.computeWindingOrder2D(g);let m,b;h===f.WindingOrder.CLOCKWISE&&(g.reverse(),t=t.slice().reverse());let P=t.length;const E=new Array(P);let A=0;if(r)for(m=new Float64Array(2*P*3*2),b=0;b<P;++b){E[b]=A/3;const e=t[b],i=t[(b+1)%P];m[A++]=e.x,m[A++]=e.y,m[A++]=e.z,m[A++]=i.x,m[A++]=i.y,m[A++]=i.z}else{let r=0;if(n===i.ArcType.GEODESIC)for(b=0;b<P;b++)r+=u.PolygonGeometryLibrary.subdivideLineCount(t[b],t[(b+1)%P],o);else if(n===i.ArcType.RHUMB)for(b=0;b<P;b++)r+=u.PolygonGeometryLibrary.subdivideRhumbLineCount(e,t[b],t[(b+1)%P],o);for(m=new Float64Array(3*r*2),b=0;b<P;++b){let r;E[b]=A/3,n===i.ArcType.GEODESIC?r=u.PolygonGeometryLibrary.subdivideLine(t[b],t[(b+1)%P],o,L):n===i.ArcType.RHUMB&&(r=u.PolygonGeometryLibrary.subdivideRhumbLine(e,t[b],t[(b+1)%P],o,L));const a=r.length;for(let e=0;e<a;++e)m[A++]=r[e]}}P=m.length/6;const _=E.length,G=2*(2*P+_),T=d.IndexDatatype.createTypedArray(P+_,G);for(A=0,b=0;b<P;++b)T[A++]=b,T[A++]=(b+1)%P,T[A++]=b+P,T[A++]=(b+1)%P+P;for(b=0;b<_;b++){const e=E[b];T[A++]=e,T[A++]=e+P}return new p.GeometryInstance({geometry:new l.Geometry({attributes:new y.GeometryAttributes({position:new l.GeometryAttribute({componentDatatype:a.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:m})}),indices:T,primitiveType:l.PrimitiveType.LINES})})}function O(o){if(n.Check.typeOf.object("options",o),n.Check.typeOf.object("options.polygonHierarchy",o.polygonHierarchy),o.perPositionHeight&&e.defined(o.height))throw new n.DeveloperError("Cannot use both options.perPositionHeight and options.height");if(e.defined(o.arcType)&&o.arcType!==i.ArcType.GEODESIC&&o.arcType!==i.ArcType.RHUMB)throw new n.DeveloperError("Invalid arcType. Valid options are ArcType.GEODESIC and ArcType.RHUMB.");const r=o.polygonHierarchy,s=e.defaultValue(o.ellipsoid,t.Ellipsoid.WGS84),l=e.defaultValue(o.granularity,a.CesiumMath.RADIANS_PER_DEGREE),y=e.defaultValue(o.perPositionHeight,!1),p=y&&e.defined(o.extrudedHeight),c=e.defaultValue(o.arcType,i.ArcType.GEODESIC);let d=e.defaultValue(o.height,0),f=e.defaultValue(o.extrudedHeight,d);if(!p){const e=Math.max(d,f);f=Math.min(d,f),d=e}this._ellipsoid=t.Ellipsoid.clone(s),this._granularity=l,this._height=d,this._extrudedHeight=f,this._arcType=c,this._polygonHierarchy=r,this._perPositionHeight=y,this._perPositionHeightExtrude=p,this._offsetAttribute=o.offsetAttribute,this._workerName="createPolygonOutlineGeometry",this.packedLength=u.PolygonGeometryLibrary.computeHierarchyPackedLength(r,t.Cartesian3)+t.Ellipsoid.packedLength+8}O.pack=function(i,o,r){return n.Check.typeOf.object("value",i),n.Check.defined("array",o),r=e.defaultValue(r,0),r=u.PolygonGeometryLibrary.packPolygonHierarchy(i._polygonHierarchy,o,r,t.Cartesian3),t.Ellipsoid.pack(i._ellipsoid,o,r),r+=t.Ellipsoid.packedLength,o[r++]=i._height,o[r++]=i._extrudedHeight,o[r++]=i._granularity,o[r++]=i._perPositionHeightExtrude?1:0,o[r++]=i._perPositionHeight?1:0,o[r++]=i._arcType,o[r++]=e.defaultValue(i._offsetAttribute,-1),o[r]=i.packedLength,o};const D=t.Ellipsoid.clone(t.Ellipsoid.UNIT_SPHERE),x={polygonHierarchy:{}};function I(i,o){return e.defined(o)&&(i=O.unpack(i,o)),i._ellipsoid=t.Ellipsoid.clone(i._ellipsoid),O.createGeometry(i)}return O.unpack=function(i,o,r){n.Check.defined("array",i),o=e.defaultValue(o,0);const a=u.PolygonGeometryLibrary.unpackPolygonHierarchy(i,o,t.Cartesian3);o=a.startingIndex,delete a.startingIndex;const s=t.Ellipsoid.unpack(i,o,D);o+=t.Ellipsoid.packedLength;const l=i[o++],y=i[o++],p=i[o++],c=1===i[o++],d=1===i[o++],f=i[o++],g=i[o++],h=i[o];return e.defined(r)||(r=new O(x)),r._polygonHierarchy=a,r._ellipsoid=t.Ellipsoid.clone(s,r._ellipsoid),r._height=l,r._extrudedHeight=y,r._granularity=p,r._perPositionHeight=d,r._perPositionHeightExtrude=c,r._arcType=f,r._offsetAttribute=-1===g?void 0:g,r.packedLength=h,r},O.fromPositions=function(t){t=e.defaultValue(t,e.defaultValue.EMPTY_OBJECT),n.Check.defined("options.positions",t.positions);const i={polygonHierarchy:{positions:t.positions},height:t.height,extrudedHeight:t.extrudedHeight,ellipsoid:t.ellipsoid,granularity:t.granularity,perPositionHeight:t.perPositionHeight,arcType:t.arcType,offsetAttribute:t.offsetAttribute};return new O(i)},O.createGeometry=function(t){const i=t._ellipsoid,n=t._granularity,s=t._polygonHierarchy,y=t._perPositionHeight,p=t._arcType,d=u.PolygonGeometryLibrary.polygonOutlinesFromHierarchy(s,!y,i);if(0===d.length)return;let g;const h=[],m=a.CesiumMath.chordLength(n,i.maximumRadius),b=t._height,P=t._extrudedHeight,E=t._perPositionHeightExtrude||!a.CesiumMath.equalsEpsilon(b,P,0,a.CesiumMath.EPSILON2);let A,_;if(E)for(_=0;_<d.length;_++){if(g=v(i,d[_],m,y,p),g.geometry=u.PolygonGeometryLibrary.scaleToGeodeticHeightExtruded(g.geometry,b,P,i,y),e.defined(t._offsetAttribute)){const e=g.geometry.attributes.position.values.length/3;let i=new Uint8Array(e);t._offsetAttribute===o.GeometryOffsetAttribute.TOP?i=o.arrayFill(i,1,0,e/2):(A=t._offsetAttribute===o.GeometryOffsetAttribute.NONE?0:1,i=o.arrayFill(i,A)),g.geometry.attributes.applyOffset=new l.GeometryAttribute({componentDatatype:a.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:i})}h.push(g)}else for(_=0;_<d.length;_++){if(g=C(i,d[_],m,y,p),g.geometry.attributes.position.values=f.PolygonPipeline.scaleToGeodeticHeight(g.geometry.attributes.position.values,b,i,!y),e.defined(t._offsetAttribute)){const e=g.geometry.attributes.position.values.length,i=new Uint8Array(e/3);A=t._offsetAttribute===o.GeometryOffsetAttribute.NONE?0:1,o.arrayFill(i,A),g.geometry.attributes.applyOffset=new l.GeometryAttribute({componentDatatype:a.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:i})}h.push(g)}const G=c.GeometryPipeline.combineInstances(h)[0],T=r.BoundingSphere.fromVertices(G.attributes.position.values);return new l.Geometry({attributes:G.attributes,indices:G.indices,primitiveType:G.primitiveType,boundingSphere:T,offsetAttribute:t._offsetAttribute})},I}));