define(["./defaultValue-94c3e563","./Matrix2-fc7e9822","./GeometryOffsetAttribute-3e8c299c","./Transforms-a076dbe6","./ComponentDatatype-4a60b8d6","./RuntimeError-c581ca93","./GeometryAttribute-2ecf73f6","./GeometryAttributes-7df9bef6","./IndexDatatype-db156785","./PolygonPipeline-cc031b9f","./RectangleGeometryLibrary-36556359","./_commonjsHelpers-3aae1032-f55dc0c4","./combine-761d9c3f","./WebGLConstants-7dccdc96","./EllipsoidRhumbLine-daebc75b"],(function(e,t,i,o,n,r,a,l,s,u,c,d,p,f,g){"use strict";const h=new o.BoundingSphere,y=new o.BoundingSphere,m=new t.Cartesian3,b=new t.Rectangle;function _(e,t){const i=e._ellipsoid,o=t.height,r=t.width,u=t.northCap,d=t.southCap;let p=o,f=2,g=0,h=4;u&&(f-=1,p-=1,g+=1,h-=2),d&&(f-=1,p-=1,g+=1,h-=2),g+=f*r+2*p-h;const y=new Float64Array(3*g);let b,_=0,E=0;const A=m;if(u)c.RectangleGeometryLibrary.computePosition(t,i,!1,E,0,A),y[_++]=A.x,y[_++]=A.y,y[_++]=A.z;else for(b=0;b<r;b++)c.RectangleGeometryLibrary.computePosition(t,i,!1,E,b,A),y[_++]=A.x,y[_++]=A.y,y[_++]=A.z;for(b=r-1,E=1;E<o;E++)c.RectangleGeometryLibrary.computePosition(t,i,!1,E,b,A),y[_++]=A.x,y[_++]=A.y,y[_++]=A.z;if(E=o-1,!d)for(b=r-2;b>=0;b--)c.RectangleGeometryLibrary.computePosition(t,i,!1,E,b,A),y[_++]=A.x,y[_++]=A.y,y[_++]=A.z;for(b=0,E=o-2;E>0;E--)c.RectangleGeometryLibrary.computePosition(t,i,!1,E,b,A),y[_++]=A.x,y[_++]=A.y,y[_++]=A.z;const w=y.length/3*2,G=s.IndexDatatype.createTypedArray(y.length/3,w);let v=0;for(let n=0;n<y.length/3-1;n++)G[v++]=n,G[v++]=n+1;G[v++]=y.length/3-1,G[v++]=0;const R=new a.Geometry({attributes:new l.GeometryAttributes,primitiveType:a.PrimitiveType.LINES});return R.attributes.position=new a.GeometryAttribute({componentDatatype:n.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:y}),R.indices=G,R}function E(e,t){const i=e._surfaceHeight,o=e._extrudedHeight,n=e._ellipsoid,r=o,a=i,l=_(e,t),c=t.height,d=t.width,p=u.PolygonPipeline.scaleToGeodeticHeight(l.attributes.position.values,a,n,!1);let f=p.length;const g=new Float64Array(2*f);g.set(p);const h=u.PolygonPipeline.scaleToGeodeticHeight(l.attributes.position.values,r,n);g.set(h,f),l.attributes.position.values=g;const y=t.northCap,m=t.southCap;let b=4;y&&(b-=1),m&&(b-=1);const E=2*(g.length/3+b),A=s.IndexDatatype.createTypedArray(g.length/3,E);f=g.length/6;let w,G=0;for(let s=0;s<f-1;s++)A[G++]=s,A[G++]=s+1,A[G++]=s+f,A[G++]=s+f+1;if(A[G++]=f-1,A[G++]=0,A[G++]=f+f-1,A[G++]=f,A[G++]=0,A[G++]=f,y)w=c-1;else{const e=d-1;A[G++]=e,A[G++]=e+f,w=d+c-2}if(A[G++]=w,A[G++]=w+f,!m){const e=d+w-1;A[G++]=e,A[G]=e+f}return l.indices=A,l}function A(i){i=e.defaultValue(i,e.defaultValue.EMPTY_OBJECT);const o=i.rectangle,a=e.defaultValue(i.granularity,n.CesiumMath.RADIANS_PER_DEGREE),l=e.defaultValue(i.ellipsoid,t.Ellipsoid.WGS84),s=e.defaultValue(i.rotation,0);if(!e.defined(o))throw new r.DeveloperError("rectangle is required.");if(t.Rectangle.validate(o),o.north<o.south)throw new r.DeveloperError("options.rectangle.north must be greater than options.rectangle.south");const u=e.defaultValue(i.height,0),c=e.defaultValue(i.extrudedHeight,u);this._rectangle=t.Rectangle.clone(o),this._granularity=a,this._ellipsoid=l,this._surfaceHeight=Math.max(u,c),this._rotation=s,this._extrudedHeight=Math.min(u,c),this._offsetAttribute=i.offsetAttribute,this._workerName="createRectangleOutlineGeometry"}A.packedLength=t.Rectangle.packedLength+t.Ellipsoid.packedLength+5,A.pack=function(i,o,n){if(!e.defined(i))throw new r.DeveloperError("value is required");if(!e.defined(o))throw new r.DeveloperError("array is required");return n=e.defaultValue(n,0),t.Rectangle.pack(i._rectangle,o,n),n+=t.Rectangle.packedLength,t.Ellipsoid.pack(i._ellipsoid,o,n),n+=t.Ellipsoid.packedLength,o[n++]=i._granularity,o[n++]=i._surfaceHeight,o[n++]=i._rotation,o[n++]=i._extrudedHeight,o[n]=e.defaultValue(i._offsetAttribute,-1),o};const w=new t.Rectangle,G=t.Ellipsoid.clone(t.Ellipsoid.UNIT_SPHERE),v={rectangle:w,ellipsoid:G,granularity:void 0,height:void 0,rotation:void 0,extrudedHeight:void 0,offsetAttribute:void 0};A.unpack=function(i,o,n){if(!e.defined(i))throw new r.DeveloperError("array is required");o=e.defaultValue(o,0);const a=t.Rectangle.unpack(i,o,w);o+=t.Rectangle.packedLength;const l=t.Ellipsoid.unpack(i,o,G);o+=t.Ellipsoid.packedLength;const s=i[o++],u=i[o++],c=i[o++],d=i[o++],p=i[o];return e.defined(n)?(n._rectangle=t.Rectangle.clone(a,n._rectangle),n._ellipsoid=t.Ellipsoid.clone(l,n._ellipsoid),n._surfaceHeight=u,n._rotation=c,n._extrudedHeight=d,n._offsetAttribute=-1===p?void 0:p,n):(v.granularity=s,v.height=u,v.rotation=c,v.extrudedHeight=d,v.offsetAttribute=-1===p?void 0:p,new A(v))};const R=new t.Cartographic;function P(i,o){return e.defined(o)&&(i=A.unpack(i,o)),i._ellipsoid=t.Ellipsoid.clone(i._ellipsoid),i._rectangle=t.Rectangle.clone(i._rectangle),A.createGeometry(i)}return A.createGeometry=function(t){const r=t._rectangle,l=t._ellipsoid,s=c.RectangleGeometryLibrary.computeOptions(r,t._granularity,t._rotation,0,b,R);let d,p;if(n.CesiumMath.equalsEpsilon(r.north,r.south,n.CesiumMath.EPSILON10)||n.CesiumMath.equalsEpsilon(r.east,r.west,n.CesiumMath.EPSILON10))return;const f=t._surfaceHeight,g=t._extrudedHeight,m=!n.CesiumMath.equalsEpsilon(f,g,0,n.CesiumMath.EPSILON2);let A;if(m){if(d=E(t,s),e.defined(t._offsetAttribute)){const e=d.attributes.position.values.length/3;let o=new Uint8Array(e);t._offsetAttribute===i.GeometryOffsetAttribute.TOP?o=i.arrayFill(o,1,0,e/2):(A=t._offsetAttribute===i.GeometryOffsetAttribute.NONE?0:1,o=i.arrayFill(o,A)),d.attributes.applyOffset=new a.GeometryAttribute({componentDatatype:n.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:o})}const u=o.BoundingSphere.fromRectangle3D(r,l,f,y),c=o.BoundingSphere.fromRectangle3D(r,l,g,h);p=o.BoundingSphere.union(u,c)}else{if(d=_(t,s),d.attributes.position.values=u.PolygonPipeline.scaleToGeodeticHeight(d.attributes.position.values,f,l,!1),e.defined(t._offsetAttribute)){const e=d.attributes.position.values.length,o=new Uint8Array(e/3);A=t._offsetAttribute===i.GeometryOffsetAttribute.NONE?0:1,i.arrayFill(o,A),d.attributes.applyOffset=new a.GeometryAttribute({componentDatatype:n.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:o})}p=o.BoundingSphere.fromRectangle3D(r,l,f)}return new a.Geometry({attributes:d.attributes,indices:d.indices,primitiveType:a.PrimitiveType.LINES,boundingSphere:p,offsetAttribute:t._offsetAttribute})},P}));