define(["./arrayRemoveDuplicates-06991c15","./BoundingRectangle-cbfe06ff","./Transforms-a076dbe6","./Matrix2-fc7e9822","./RuntimeError-c581ca93","./ComponentDatatype-4a60b8d6","./CoplanarPolygonGeometryLibrary-effcf1e1","./defaultValue-94c3e563","./GeometryAttribute-2ecf73f6","./GeometryAttributes-7df9bef6","./GeometryInstance-97bd792f","./GeometryPipeline-b4816e69","./IndexDatatype-db156785","./PolygonGeometryLibrary-6d3a5ed4","./PolygonPipeline-cc031b9f","./VertexFormat-e46f29d6","./_commonjsHelpers-3aae1032-f55dc0c4","./combine-761d9c3f","./WebGLConstants-7dccdc96","./OrientedBoundingBox-417528c0","./EllipsoidTangentPlane-d2c0c530","./AxisAlignedBoundingBox-8103739f","./IntersectionTests-5deed78b","./Plane-e20fba8c","./AttributeCompression-4d18cc04","./EncodedCartesian3-d3e254ea","./ArcType-0cf52f8c","./EllipsoidRhumbLine-daebc75b"],(function(e,t,n,o,r,a,i,s,l,c,y,p,d,u,m,g,f,C,h,b,x,P,A,L,w,G,F,v){"use strict";const k=new o.Cartesian3,E=new t.BoundingRectangle,_=new o.Cartesian2,T=new o.Cartesian2,D=new o.Cartesian3,V=new o.Cartesian3,H=new o.Cartesian3,R=new o.Cartesian3,I=new o.Cartesian3,M=new o.Cartesian3,B=new n.Quaternion,O=new o.Matrix3,z=new o.Matrix3,S=new o.Cartesian3;function N(e,t,r,i,y,p,u,g,f){const C=e.positions;let h=m.PolygonPipeline.triangulate(e.positions2D,e.holes);h.length<3&&(h=[0,1,2]);const b=d.IndexDatatype.createTypedArray(C.length,h.length);b.set(h);let x=O;if(0!==i){let e=n.Quaternion.fromAxisAngle(u,i,B);if(x=o.Matrix3.fromQuaternion(e,x),t.tangent||t.bitangent){e=n.Quaternion.fromAxisAngle(u,-i,B);const r=o.Matrix3.fromQuaternion(e,z);g=o.Cartesian3.normalize(o.Matrix3.multiplyByVector(r,g,g),g),t.bitangent&&(f=o.Cartesian3.normalize(o.Cartesian3.cross(u,g,f),f))}}else x=o.Matrix3.clone(o.Matrix3.IDENTITY,x);const P=T;t.st&&(P.x=r.x,P.y=r.y);const A=C.length,L=3*A,w=new Float64Array(L),G=t.normal?new Float32Array(L):void 0,F=t.tangent?new Float32Array(L):void 0,v=t.bitangent?new Float32Array(L):void 0,E=t.st?new Float32Array(2*A):void 0;let D=0,V=0,H=0,R=0,I=0;for(let n=0;n<A;n++){const e=C[n];if(w[D++]=e.x,w[D++]=e.y,w[D++]=e.z,t.st)if(s.defined(y)&&y.positions.length===A)E[I++]=y.positions[n].x,E[I++]=y.positions[n].y;else{const t=o.Matrix3.multiplyByVector(x,e,k),n=p(t,_);o.Cartesian2.subtract(n,P,n);const i=a.CesiumMath.clamp(n.x/r.width,0,1),s=a.CesiumMath.clamp(n.y/r.height,0,1);E[I++]=i,E[I++]=s}t.normal&&(G[V++]=u.x,G[V++]=u.y,G[V++]=u.z),t.tangent&&(F[R++]=g.x,F[R++]=g.y,F[R++]=g.z),t.bitangent&&(v[H++]=f.x,v[H++]=f.y,v[H++]=f.z)}const M=new c.GeometryAttributes;return t.position&&(M.position=new l.GeometryAttribute({componentDatatype:a.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:w})),t.normal&&(M.normal=new l.GeometryAttribute({componentDatatype:a.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:G})),t.tangent&&(M.tangent=new l.GeometryAttribute({componentDatatype:a.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:F})),t.bitangent&&(M.bitangent=new l.GeometryAttribute({componentDatatype:a.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:v})),t.st&&(M.st=new l.GeometryAttribute({componentDatatype:a.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:E})),new l.Geometry({attributes:M,indices:b,primitiveType:l.PrimitiveType.TRIANGLES})}function j(e){e=s.defaultValue(e,s.defaultValue.EMPTY_OBJECT);const t=e.polygonHierarchy,n=e.textureCoordinates;r.Check.defined("options.polygonHierarchy",t);const a=s.defaultValue(e.vertexFormat,g.VertexFormat.DEFAULT);this._vertexFormat=g.VertexFormat.clone(a),this._polygonHierarchy=t,this._stRotation=s.defaultValue(e.stRotation,0),this._ellipsoid=o.Ellipsoid.clone(s.defaultValue(e.ellipsoid,o.Ellipsoid.WGS84)),this._workerName="createCoplanarPolygonGeometry",this._textureCoordinates=n,this.packedLength=u.PolygonGeometryLibrary.computeHierarchyPackedLength(t,o.Cartesian3)+g.VertexFormat.packedLength+o.Ellipsoid.packedLength+(s.defined(n)?u.PolygonGeometryLibrary.computeHierarchyPackedLength(n,o.Cartesian2):1)+2}j.fromPositions=function(e){e=s.defaultValue(e,s.defaultValue.EMPTY_OBJECT),r.Check.defined("options.positions",e.positions);const t={polygonHierarchy:{positions:e.positions},vertexFormat:e.vertexFormat,stRotation:e.stRotation,ellipsoid:e.ellipsoid,textureCoordinates:e.textureCoordinates};return new j(t)},j.pack=function(e,t,n){return r.Check.typeOf.object("value",e),r.Check.defined("array",t),n=s.defaultValue(n,0),n=u.PolygonGeometryLibrary.packPolygonHierarchy(e._polygonHierarchy,t,n,o.Cartesian3),o.Ellipsoid.pack(e._ellipsoid,t,n),n+=o.Ellipsoid.packedLength,g.VertexFormat.pack(e._vertexFormat,t,n),n+=g.VertexFormat.packedLength,t[n++]=e._stRotation,s.defined(e._textureCoordinates)?n=u.PolygonGeometryLibrary.packPolygonHierarchy(e._textureCoordinates,t,n,o.Cartesian2):t[n++]=-1,t[n++]=e.packedLength,t};const Q=o.Ellipsoid.clone(o.Ellipsoid.UNIT_SPHERE),U=new g.VertexFormat,Y={polygonHierarchy:{}};function q(e,t){return s.defined(t)&&(e=j.unpack(e,t)),j.createGeometry(e)}return j.unpack=function(e,t,n){r.Check.defined("array",e),t=s.defaultValue(t,0);const a=u.PolygonGeometryLibrary.unpackPolygonHierarchy(e,t,o.Cartesian3);t=a.startingIndex,delete a.startingIndex;const i=o.Ellipsoid.unpack(e,t,Q);t+=o.Ellipsoid.packedLength;const l=g.VertexFormat.unpack(e,t,U);t+=g.VertexFormat.packedLength;const c=e[t++],y=-1===e[t]?void 0:u.PolygonGeometryLibrary.unpackPolygonHierarchy(e,t,o.Cartesian2);s.defined(y)?(t=y.startingIndex,delete y.startingIndex):t++;const p=e[t++];return s.defined(n)||(n=new j(Y)),n._polygonHierarchy=a,n._ellipsoid=o.Ellipsoid.clone(i,n._ellipsoid),n._vertexFormat=g.VertexFormat.clone(l,n._vertexFormat),n._stRotation=c,n._textureCoordinates=y,n.packedLength=p,n},j.createGeometry=function(t){const r=t._vertexFormat,c=t._polygonHierarchy,m=t._stRotation,g=t._textureCoordinates,f=s.defined(g);let C=c.positions;if(C=e.arrayRemoveDuplicates(C,o.Cartesian3.equalsEpsilon,!0),C.length<3)return;let h=D,b=V,x=H,P=I;const A=M,L=i.CoplanarPolygonGeometryLibrary.computeProjectTo2DArguments(C,R,P,A);if(!L)return;if(h=o.Cartesian3.cross(P,A,h),h=o.Cartesian3.normalize(h,h),!o.Cartesian3.equalsEpsilon(R,o.Cartesian3.ZERO,a.CesiumMath.EPSILON6)){const e=t._ellipsoid.geodeticSurfaceNormal(R,S);o.Cartesian3.dot(h,e)<0&&(h=o.Cartesian3.negate(h,h),P=o.Cartesian3.negate(P,P))}const w=i.CoplanarPolygonGeometryLibrary.createProjectPointsTo2DFunction(R,P,A),G=i.CoplanarPolygonGeometryLibrary.createProjectPointTo2DFunction(R,P,A);r.tangent&&(b=o.Cartesian3.clone(P,b)),r.bitangent&&(x=o.Cartesian3.clone(A,x));const F=u.PolygonGeometryLibrary.polygonsFromHierarchy(c,f,w,!1),v=F.hierarchy,k=F.polygons,_=function(e){return e},T=f?u.PolygonGeometryLibrary.polygonsFromHierarchy(g,!0,_,!1).polygons:void 0;if(0===v.length)return;C=v[0].outerRing;const B=n.BoundingSphere.fromPoints(C),O=u.PolygonGeometryLibrary.computeBoundingRectangle(h,G,C,m,E),z=[];for(let e=0;e<k.length;e++){const t=new y.GeometryInstance({geometry:N(k[e],r,O,m,f?T[e]:void 0,G,h,b,x)});z.push(t)}const j=p.GeometryPipeline.combineInstances(z)[0];j.attributes.position.values=new Float64Array(j.attributes.position.values),j.indices=d.IndexDatatype.createTypedArray(j.attributes.position.values.length/3,j.indices);const Q=j.attributes;return r.position||delete Q.position,new l.Geometry({attributes:Q,indices:j.indices,primitiveType:j.primitiveType,boundingSphere:B})},q}));